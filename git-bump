#!/bin/bash

set -e

GIT_REPO_ROOT=$(git rev-parse --show-toplevel)
DEPLOY_CONFIG="${GIT_REPO_ROOT}/.git-deploy"

GIT_OPTS=""
OUTPUT_FILTER="cat" # no-op

bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
orange=$(tput setaf 3)
darkblue=$(tput setaf 4)
purple=$(tput setaf 5)
aqua=$(tput setaf 6)
white=$(tput setaf 7)
reset=$(tput sgr0)

function usage() {
    echo "Usage:"
    echo "    git bump <environment>"
    echo ""
    echo "Known environments:"
    listenvs | sed 's/^/    /'
    echo ""
    echo "See 'man git-bump' for further information"
}

function listenvs() {
	git config -f "${DEPLOY_CONFIG}" --get-regexp '^environment\.' | cut -d'.' -f 2 | sort | uniq
}

# actually parse the options and do stuff
while [[ $1 = -?* ]]; do
    case $1 in
        -h|--help)
            usage
            exit 0
            ;;
        --fetch)
            echo "Fetch updates"
            echo "    git fetch -q"
            ;;
        --list-envs)
            listenvs
            exit 0
            ;;
        *) ;;
    esac

shift
done

if [ $# -ne 1 ] ; then
	usage
	exit 0
fi


BUMP_ENV=$1
echo "Bumping for environment ${bold}${BUMP_ENV}${reset}"


if [ ! -f "$DEPLOY_CONFIG" ] ; then
	echo "${red}Can't find .git-deploy config in the root of your repo, cannot continue.${reset}"
	exit 2
fi


# XXX: WHAT should we tag? If it's not the latest and greatest, pass the commit
#      hash through to the helper.

# XXX: is it SAFE to tag?

# WHAT is the new tag?
if ! git config -f "$DEPLOY_CONFIG" --get-regexp "^environment\.${BUMP_ENV}\.versioning" >/dev/null ; then
	echo "We don't know how to version for ${BUMP_ENV}, please set 'environment.${BUMP_ENV}.versioning' in .git-deploy and try again"
	exit 3
fi

VERSIONING=$(git config -f "$DEPLOY_CONFIG" --get environment.${BUMP_ENV}.versioning)
echo "Versioning style is: ${bold}${VERSIONING}${reset}"

if ! git tag | git-bump--helper $VERSIONING >/dev/null ; then
	git tag | git-bump--helper $VERSIONING
else
	# The helper returns the command necessary to perform the work of bumping.
	next_version_tag=$( git tag | git-bump--helper $VERSIONING )
	echo "Bumping: ${bold}${next_version_tag}${reset}"

	# Now apply the tag. The helper knows how to apply the tag, and what to apply it to.
	$next_version_tag
fi
