#!/bin/bash

set -e

GIT_REPO_ROOT=$(git rev-parse --show-toplevel)
DEPLOY_CONFIG="${GIT_REPO_ROOT}/.git-deploy"

GIT_OPTS=""
OUTPUT_FILTER="cat" # no-op

bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
orange=$(tput setaf 3)
darkblue=$(tput setaf 4)
purple=$(tput setaf 5)
aqua=$(tput setaf 6)
white=$(tput setaf 7)
reset=$(tput sgr0)

function usage() {
    echo "Usage:"
    echo "    git bump <environment>"
    echo ""
    echo "Known environments:"
    listenvs | sed 's/^/    /'
    echo ""
    echo "See 'man git-bump' for further information"
}

function listenvs() {
	git config -f "${GIT_REPO_ROOT}/.git-deploy" --get-regexp '^environment\.' | sed -r 's/\.[a-zA-Z0-9-]+ .*//' | cut -d'.' -f 2- | sort | uniq
}

# actually parse the options and do stuff
while [[ $1 = -?* ]]; do
    case $1 in
        -h|--help)
            usage
            exit 0
            ;;
        --fetch)
            echo "Fetch updates"
            echo "    git fetch -q"
            ;;
        --list-envs)
            listenvs
            exit 0
            ;;
        *) ;;
    esac

shift
done

if [ $# -ne 1 ] ; then
	usage
	exit 0
fi


BUMP_ENV=$1
echo "Bumping for environment ${bold}${BUMP_ENV}${reset}"


if [ ! -f "$DEPLOY_CONFIG" ] ; then
	echo "${red}Can't find .git-deploy config in the root of your repo, cannot continue.${reset}"
	exit 2
fi


# XXX: WHAT should we tag?

# XXX: is it SAFE to tag?

# WHAT is the new tag?
if ! git config -f "$DEPLOY_CONFIG" --get-regexp "^environment\.${BUMP_ENV}\.versioning" >/dev/null ; then
	echo "We don't know how to version for ${BUMP_ENV}, please set 'environment.${BUMP_ENV}.versioning' in .git-deploy and try again"
	exit 3
fi

VERSIONING=$(git config -f "$DEPLOY_CONFIG" --get environment.${BUMP_ENV}.versioning)
echo "Versioning style is: ${bold}${VERSIONING}${reset}"

git tag | git-bump--helper $VERSIONING
#echo -e "These\nare\nsome\nsample\ntags" | git-bump--helper $VERSIONING



#git config -f "${GIT_REPO_ROOT}/.git-deploy" --get-regexp '^environment\.' | sed -r 's/\.[a-zA-Z0-9-]+ .*//' | cut -d'.' -f 2- | sort | uniq
#
#
#
#
#NUM_TAGS=$(git tag -l "${DEPLOY_ENV}-v*" | wc -l)
#if [ $NUM_TAGS -eq 0 ] ; then
#	echo "${red}Can't find any tags for the ${DEPLOY_ENV} environment, please create one first:${reset}"
#	echo "    git tag ${DEPLOY_ENV}-vNNN"
#	exit 1
#fi
#
#echo "Matching tags:"
#git tag -l "${DEPLOY_ENV}-v*" | sed 's/^/    /' | tac
#echo
#
#NEW_VERSION=$( git tag -l "${DEPLOY_ENV}-v*" | sed -r "s/^${DEPLOY_ENV}-v//" | tac | deploymentversionbumper.py bump_rc )
#NEW_TAG="${DEPLOY_ENV}-v${NEW_VERSION}"
#git tag "$NEW_TAG"
#
#
#echo "Pushing new tag: ${green}${NEW_TAG}${reset}"
#git push origin "$NEW_TAG"
#echo
#
#source "$DEPLOY_CONFIG_PATH"
##echo ssh "${GITDEPLOY_SSH_USER}@${GITDEPLOY_SSH_HOST}" -- make -C "$GITDEPLOY_DIR" "$GITDEPLOY_MAKETARGET" | head
#echo ssh "${GITDEPLOY_SSH_USER}@${GITDEPLOY_SSH_HOST}" -- make -C "$GITDEPLOY_DIR" "$NEW_TAG"
#ssh "${GITDEPLOY_SSH_USER}@${GITDEPLOY_SSH_HOST}" -- make -C "$GITDEPLOY_DIR" "$NEW_TAG"
#
