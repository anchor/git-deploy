#!/bin/bash

set -e

GIT_REPO_ROOT=$(git rev-parse --show-toplevel)
DEPLOY_CONFIG="${GIT_REPO_ROOT}/.git-deploy"

bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
orange=$(tput setaf 3)
darkblue=$(tput setaf 4)
purple=$(tput setaf 5)
aqua=$(tput setaf 6)
white=$(tput setaf 7)
reset=$(tput sgr0)

function usage() {
	echo "Usage:"
	echo "	git deploy <environment>"
	echo ""
	echo "Known environments:"
	listenvs | sed 's/^/	/'
	echo ""
	echo "See 'man git-deploy' for further information"
}

function listenvs() {
	git config -f "${DEPLOY_CONFIG}" --get-regexp '^environment\.' | cut -d'.' -f 2 | sort | uniq
}




if [ $# -ne 1 ] ; then
	usage
	exit 0
fi

if [ ! -f "$DEPLOY_CONFIG" ] ; then
	echo "${red}Can't find .git-deploy config in the root of your repo, cannot continue.${reset}"
	exit 2
fi


DEPLOY_ENV=$1
if ! ( listenvs | grep -q "^${DEPLOY_ENV}$" ) ; then
	echo "${red}There is no config for the environment '${DEPLOY_ENV}' in your .git-deploy file, cannot continue.${reset}"
	exit 2
fi
echo "Deploying to: ${bold}${DEPLOY_ENV}${reset}"



# WHAT is the new tag?
if ! git config -f "$DEPLOY_CONFIG" --get-regexp "^environment\.${DEPLOY_ENV}\.versioning" >/dev/null ; then
	echo "${red}I don't know what tags to look for, you haven't set 'environment.${DEPLOY_ENV}.versioning' in your .git-deploy file.${reset}"
	exit 3
fi

VERSIONING=$(git config -f "$DEPLOY_CONFIG" --get environment.${DEPLOY_ENV}.versioning)
echo "Versioning style for ${DEPLOY_ENV} is: ${bold}${VERSIONING}${reset}"


if ! git tag | git-deploy--helper $VERSIONING >/dev/null ; then
	git tag | git-deploy--helper $VERSIONING
else
	tag_to_deploy=$( git tag | git-deploy--helper $VERSIONING )
	echo "Will deploy ${green}${tag_to_deploy}${reset}"
fi


echo "Pushing tag..."
git push origin tag "$tag_to_deploy"


# We're not sanity-checking for the existence of these variables, #yolo
ssh_user=$(git config -f "$DEPLOY_CONFIG" --get "environment.${DEPLOY_ENV}.user")
ssh_hosts=$(git config -f "$DEPLOY_CONFIG" --get "environment.${DEPLOY_ENV}.host"|tr "," " ")
ssh_command_template=$(git config -f "$DEPLOY_CONFIG" --get "environment.${DEPLOY_ENV}.command")
echo "${ssh_host}"

for ssh_host in $ssh_hosts
do
	#echo "command template is: ${ssh_command_template}"
	ssh_command=$(printf "$ssh_command_template" $tag_to_deploy)
	#echo "filled command is:   ${ssh_command}"

	set -e
	echo "${green}Deploying to: ${ssh_host}${reset}"
	ssh "${ssh_user}@${ssh_host}" -- "$ssh_command"
done

echo "${green}Done!${reset}"
